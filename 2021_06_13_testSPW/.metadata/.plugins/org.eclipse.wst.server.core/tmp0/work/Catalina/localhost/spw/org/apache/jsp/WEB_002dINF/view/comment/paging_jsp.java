/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.64
 * Generated at: 2021-06-13 06:58:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.comment;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class paging_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String p_url = request.getParameter("url");
	String p_qStr = request.getParameter("qStr");
	String p_curpage = request.getParameter("curpage");
	String p_groupsize = request.getParameter("groupsize");
	String p_pagesize = request.getParameter("pagesize");
	String p_totalcount = request.getParameter("totalcount");

	// URL
	String url = "";
	if(p_url != null && p_url.length() > 0){
		url = p_url;
	}

	// 쿼리스트링
	String qStr = "";
	if(p_qStr != null && p_qStr.length() > 0){
		qStr = p_qStr + "&";
	}

	int curpage = 1;
	int groupsize = 0;
	int pagesize = 0;
	int totalcount = 0;

	// 현재 페이지
	if(p_curpage != null && p_curpage.length() > 0){
		try{
			curpage = Integer.parseInt(p_curpage);
		}catch(NumberFormatException e){}
	}

	// 그룹 사이즈
	if(p_groupsize != null && p_groupsize.length() > 0){
		try{
			groupsize = Integer.parseInt(p_groupsize);
		}catch(NumberFormatException e){}
	}

	// 페이지 사이즈
	if(p_pagesize != null && p_pagesize.length() > 0){
		try{
			pagesize = Integer.parseInt(p_pagesize);
		}catch(NumberFormatException e){}
	}

	// 글 수
	if(p_totalcount != null && p_totalcount.length() > 0){
		try{
			totalcount = Integer.parseInt(p_totalcount);
		}catch(NumberFormatException e){}
	}

	System.out.println("[i] curpage    -> " + curpage);
	System.out.println("[i] groupsize  -> " + groupsize);
	System.out.println("[i] pagesize   -> " + pagesize);
	System.out.println("[i] totalcount -> " + totalcount);

	// 페이지 개수
	int pagecount = (int)Math.ceil(totalcount / (double)pagesize);

	// 그룹시작점
	int groupstart = (curpage / groupsize) * groupsize + 1;

	if(pagecount > 0){
		// 1 페이지로, 이전그룹으로
		if(groupstart > 1){

      out.write("\r\n");
      out.write("\t<a href=\"/spw/");
      out.print(url);
      out.write('?');
      out.print(qStr);
      out.write("curpage=1\" class=\"sitebtn\">◁◁</a>\r\n");
      out.write("\t<a href=\"/spw/");
      out.print(url);
      out.write('?');
      out.print(qStr);
      out.write("curpage=");
      out.print((groupstart - groupsize));
      out.write("\" class=\"sitebtn\">◀</a>\r\n");

		}else{

      out.write("\r\n");
      out.write("\t<span class=\"sitebtn\">◁◁</span>\r\n");
      out.write("\t<span class=\"sitebtn\">◀</span>\r\n");

		}

		// 1, 2, 3, ...

		for(int i = 0; i < groupsize; i++){
			int pageNum = groupstart + i;
	
			if(pageNum > pagecount){
				break;
			}
	
			if(pageNum == curpage){

      out.write("\r\n");
      out.write("\t<span class=\"sitebtn paging_selected\">");
      out.print(pageNum);
      out.write("</span>\r\n");

			}else{

      out.write("\r\n");
      out.write("\t<a href=\"/spw/");
      out.print(url);
      out.write('?');
      out.print(qStr);
      out.write("curpage=");
      out.print(pageNum);
      out.write("\" class=\"sitebtn\">");
      out.print(pageNum);
      out.write("</a>\r\n");

			
			}
		}

		// 다음그룹으로, 마지막 페이지로
		if(groupstart < (pagecount - groupsize)){

      out.write("\r\n");
      out.write("\t<a href=\"/spw/");
      out.print(url);
      out.write('?');
      out.print(qStr);
      out.write("curpage=");
      out.print((groupstart + groupsize));
      out.write("\" class=\"sitebtn\">▶</a>\r\n");
      out.write("\t<a href=\"/spw/");
      out.print(url);
      out.write('?');
      out.print(qStr);
      out.write("curpage=");
      out.print(pagecount);
      out.write("\" class=\"sitebtn\">▷▷</a>\r\n");

		}else{

      out.write("\r\n");
      out.write("\t<span class=\"sitebtn\">▶</span>\r\n");
      out.write("\t<span class=\"sitebtn\">▷▷</span>\r\n");

		}
		
	}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
