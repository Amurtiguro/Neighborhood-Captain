/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.64
 * Generated at: 2021-06-05 06:03:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.general;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class paging_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String url=null;
	String qString=null;
	
	url=request.getParameter("url");
	qString=request.getParameter("qString");

	System.out.println("url : "+url);
	System.out.println("qString : "+qString);
	if(qString != null){
		qString=qString+"&";
	}//end of if
	
	int pagesize=0;   
	int groupsize=0;  
	int curpage=0;    
	int totalcount=0; 
	int pageCount=0;  
	
	/* String gupdate=request.getParameter("gupdate"); */
	
	if(request.getParameter("groupsize") !=null){
		groupsize=Integer.parseInt(request.getParameter("groupsize"));
	}
	
	if(request.getParameter("pagesize") !=null){
		pagesize=Integer.parseInt(request.getParameter("pagesize"));
	}
	
	if(request.getParameter("totalcount") !=null){
		totalcount=Integer.parseInt(request.getParameter("totalcount"));
	}
	
	if(request.getParameter("curpage") !=null){
		curpage=Integer.parseInt(request.getParameter("curpage"));
	}
	
	pageCount=(int)Math.ceil(totalcount/(pagesize+0.0));
	//System.out.println("pageCount==>>"+pageCount);
	
	int curGroup=(curpage-1)/groupsize;
	int linkPage=curGroup*groupsize;
	
	/* System.out.println("groupsize==>>"+groupsize);
	System.out.println("totalcount==>>"+totalcount);
	System.out.println("curpage==>>"+curpage);
	System.out.println("pageCount==>>"+pageCount);
	System.out.println("curGroup==>>"+curGroup);
	System.out.println("linkPage==>>"+linkPage); */
	

      out.write("\r\n");
      out.write("<p align=\"right\">\r\n");

	//System.out.println("curGroup_1==>>"+curGroup);
	if(curGroup >0){

      out.write("\r\n");
      out.write("\t<span class=\"sitebtn\"><a href=\"");
      out.print(url);
      out.write('?');
      out.print(qString);
      out.write("curpage=1\">◁◁</a></span>\r\n");
      out.write("\t<span class=\"sitebtn\"><a href=\"");
      out.print(url);
      out.write('?');
      out.print(qString);
      out.write("curpage=");
      out.print(linkPage);
      out.write("\">◀</a></span>\r\n");
		
	}else{

      out.write("\r\n");
      out.write("\t\t<span class=\"sitebtn\">◁◁</span>\r\n");
      out.write("\t\t<span class=\"sitebtn\">◀</span>\r\n");
	
	}//end of if-else
		
	linkPage++;
	//System.out.println("linkPage_1==>>"+linkPage);
	
	int loopCount =groupsize;
	//System.out.println("loopCount_1==>>"+loopCount);
	
	//System.out.println(loopCount +" >0   && "+ linkPage+ " <= "+ pageCount);
	while(loopCount >0 && linkPage <= pageCount){
		if(linkPage == curpage){
		//System.out.println("linkPage==>"+linkPage);

      out.write("\r\n");
      out.write("\t\t<span class=\"sitebtn paging_selected\">");
      out.print(linkPage );
      out.write("</span>\r\n");

		}else{
		//System.out.println("linkPage==>"+linkPage);

      out.write("\r\n");
      out.write("\t\t<a href=\"");
      out.print(url);
      out.write('?');
      out.print(qString);
      out.write("curpage=");
      out.print(linkPage);
      out.write("\" class=\"sitebtn\">");
      out.print(linkPage);
      out.write("</a>\r\n");
			
		}//end of if-else
			
		linkPage++;
		loopCount--;
		//System.out.println(">>>"+linkPage+" : "+loopCount);
	}//end of while
		
	//System.out.println("<<<>>>"+linkPage+" <= "+pageCount);	
	if(linkPage <=pageCount){
		//System.out.println("linkPage==>"+linkPage);
		//System.out.println("pageCount==>"+pageCount);

      out.write("\r\n");
      out.write("\t\t<span class=\"sitebtn\"><a href=\"");
      out.print(url);
      out.write('?');
      out.print(qString);
      out.write("curpage=");
      out.print(linkPage);
      out.write("\">▶</a></span>\r\n");
      out.write("\t\t<span class=\"sitebtn\"><a href=\"");
      out.print(url);
      out.write('?');
      out.print(qString);
      out.write("curpage=");
      out.print(pageCount);
      out.write("\">▷▷</a></span>\r\n");
		
	}else{

      out.write("\r\n");
      out.write("\t\t<span class=\"sitebtn\">▶</span>\r\n");
      out.write("\t\t<span class=\"sitebtn\">▷▷</span>\r\n");
			
	}//end of if-else	
		

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
